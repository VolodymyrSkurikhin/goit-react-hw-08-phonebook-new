{"version":3,"file":"static/js/515.3fc300a3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","components/helpers.js","webpack://react-homework-template/./src/Pages/ContactsView/ContactsView.module.css?7f59","Pages/ContactsView/ContactsView.js","webpack://react-homework-template/./src/components/Loader/loader.module.css?1600","components/Loader/loader.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"maincontainer\":\"ContactForm_maincontainer__85ax8\",\"mainform\":\"ContactForm_mainform__vEAsf\",\"mainlabel\":\"ContactForm_mainlabel__nhJ8N\",\"mainInput\":\"ContactForm_mainInput__5JLGe\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContactItems } from '../../Redux/selectors';\nimport { Loader } from '../Loader/loader';\nimport { post } from '../../Redux/thunk';\n// import PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContactItems);\n  const dispatch = useDispatch();\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n  // useEffect(() => {\n  //   dispatch(fetch());\n  // }, [dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    contacts.find(cont => cont.name === name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(\n          // post({ createdAt: () => new Date().toISOString(), name, number })\n          post({ name, number })\n        );\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.maincontainer}>\n      <Loader />\n      <form className={s.mainform} onSubmit={handleSubmit}>\n        <label htmlFor=\"inpname\" className={s.mainlabel}>\n          Name{' '}\n        </label>\n        <input\n          id=\"inpname\"\n          className={s.mainInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n        />\n        <label htmlFor=\"inptel\" className={s.mainlabel}>\n          Number{' '}\n        </label>\n        <input\n          id=\"inptel\"\n          className={s.mainInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={e => setNumber(e.currentTarget.value)}\n        />\n        <button type=\"submit\" className={s.submitBtn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"filterText\":\"Filter_filterText__QGy-k\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../Redux/action';\nimport { getFilter } from 'Redux/selectors';\n// import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleFilter = e => dispatch(changeFilter(e.currentTarget.value));\n  return (\n    <label htmlFor=\"inpfilter\" className={s.filterText}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={s.filterInput}\n        id=\"inpfilter\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   handleFilter: PropTypes.func,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"deleteBtn\":\"ContactList_deleteBtn__1dg25\",\"dateInfo\":\"ContactList_dateInfo__Vath6\"};","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetch, deleteThunk } from '../../Redux/thunk';\nimport { getContactItems, getFilter } from '../../Redux/selectors';\nimport { renderContactList } from '../helpers';\nimport { Loader } from 'components/Loader/loader';\n// import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContactItems);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetch());\n  }, [dispatch]);\n  const onDelete = id => dispatch(deleteThunk(id));\n  const visibleContacts = renderContactList(filter, contacts);\n  return (\n    <div>\n      <Loader />\n      <ul className={s.contactList}>\n        {visibleContacts.map(item => (\n          <li className={s.contactListItem} key={item.id}>\n            &#9743;&#160;\n            {item.name}: {item.number}\n            {/* <span className={s.dateInfo}>\n              Created:&#160;\n              {new Date(item.createdAt).toLocaleString()}\n            </span> */}\n            <button\n              type=\"button\"\n              className={s.deleteBtn}\n              onClick={() => onDelete(item.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n// ContactList.propTypes = {\n//   visibleContacts: PropTypes.arrayOf(\n//     PropTypes.shape({ id: PropTypes.string.isRequired })\n//   ),\n//   deleteHandle: PropTypes.func,\n// };\n","export function renderContactList(filter = '', contacts = []) {\n  const filterLowered = filter.toLowerCase();\n  return contacts.filter(cont =>\n    cont.name.toLowerCase().includes(filterLowered)\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactTitle\":\"ContactsView_contactTitle__-3vWC\"};","import React from 'react';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n// import { UserMenu } from 'components/UserMenu/UserMenu';\nimport s from './ContactsView.module.css';\n\nfunction ContactsView() {\n  return (\n    <>\n      <ContactForm />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default ContactsView;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsContainer\":\"loader_contactsContainer__Cn+zC\"};","import { Circles } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport s from './loader.module.css';\n\nexport function Loader() {\n  const loader = useSelector(state => state.contacts.isLoading);\n  return (\n    <div className={s.contactsContainer}>\n      {loader && <Circles ariaLabel=\"loading-indicator\" />}\n    </div>\n  );\n}\n"],"names":["useState","name","setName","number","setNumber","contacts","useSelector","getContactItems","dispatch","useDispatch","className","s","onSubmit","e","preventDefault","find","cont","alert","post","htmlFor","id","type","pattern","title","required","value","onChange","currentTarget","Filter","filter","getFilter","changeFilter","ContactList","useEffect","fetch","visibleContacts","filterLowered","toLowerCase","includes","renderContactList","map","item","onClick","deleteThunk","Loader","loader","state","isLoading","ariaLabel"],"sourceRoot":""}